name: git action 공부

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 기여자의 브랜치로 checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: node 설정
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: "yarn"

      - name: 변경된 .ts, .tsx 파일 가져오기
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **.ts
            **.tsx

      - name: TS_CHANGED_FILES 확인
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          TS_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${TS_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: 변경된 파일이 포함된 패키지 확인
        run: |
          PACKAGES=()
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ ! " ${PACKAGES[@]} " =~ " ui " && "$file" == app/ui/* ]]; then
              PACKAGES+=("ui")
            elif [[ ! " ${PACKAGES[@]} " =~ " dashboard " && "$file" == app/dashboard/* ]]; then
              PACKAGES+=("dashboard")
            elif [[ ! " ${PACKAGES[@]} " =~ " manager " && "$file" == app/manager/* ]]; then
              PACKAGES+=("manager")
            fi

            if [[ ${#PACKAGES[@]} -eq 3 ]]; then
              break
            fi
          done

          echo "변경된 패키지: ${PACKAGES[@]}"
          echo "UNIQUE_PACKAGES=${PACKAGES[@]}" >> $GITHUB_ENV
